{
	"info": {
		"_postman_id": "a2f9906f-6339-409c-92fe-a4fc3cd0aeae",
		"name": "Mindex Java Code Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Employee",
			"item": [
				{
					"name": "Create new Employee",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"employeeId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Check return and save employeeId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).to.eql(\"Andrew\");",
									"    pm.collectionVariables.set(\"employeeId\", jsonData.employeeId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Andrew\",\n    \"lastName\": \"Vehlies\",\n    \"position\": \"Software Developer\",\n    \"department\": \"Engineering\",\n    \"directReports\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employee by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Returns created user\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).to.eql(\"Andrew\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Vehlies\");",
									"    pm.expect(jsonData.directReports).to.eql(null);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/employee/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{employeeId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Employee by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check updated field\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).to.eql(\"Andrew\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Vehlies\");",
									"    pm.expect(jsonData.position).to.eql(\"Senior Software Developer\");",
									"    pm.expect(jsonData.department).to.eql(\"Engineering\");",
									"    pm.expect(jsonData.directReports).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Andrew\",\n    \"lastName\": \"Vehlies\",\n    \"department\": \"Engineering\",\n    \"position\": \"Senior Software Developer\",\n    \"directReports\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{employeeId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employee by ID after Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Returns created user\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).to.eql(\"Andrew\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Vehlies\");",
									"    pm.expect(jsonData.position).to.eql(\"Senior Software Developer\");",
									"    pm.expect(jsonData.department).to.eql(\"Engineering\");",
									"    pm.expect(jsonData.directReports).to.eql(null);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/employee/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{employeeId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee Reporting",
			"item": [
				{
					"name": "Create Grandson 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"grandson1id\");",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"grandson1id\", jsonData.employeeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Grandson\",\n    \"lastName\": \"One\",\n    \"position\": \"Grandson\",\n    \"department\": \"Grandchildren\",\n    \"directReports\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Granddaughter 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"granddaughter1id\");",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"granddaughter1id\", jsonData.employeeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Granddaughter\",\n    \"lastName\": \"One\",\n    \"position\": \"Granddaughter\",\n    \"department\": \"Grandchildren\",\n    \"directReports\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Grandson 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"grandson2id\");",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"grandson2id\", jsonData.employeeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Grandson\",\n    \"lastName\": \"Two\",\n    \"position\": \"Grandson\",\n    \"department\": \"Grandchildren\",\n    \"directReports\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Daughter 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"daughter1id\");",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"daughter1id\", jsonData.employeeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Daughter\",\n    \"lastName\": \"One\",\n    \"position\": \"Daughter\",\n    \"department\": \"Children\",\n    \"directReports\": [\n        {\n            \"employeeId\": \"{{grandson1id}}\"\n        },\n        {\n            \"employeeId\": \"{{granddaughter1id}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Son 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"son1id\");",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"son1id\", jsonData.employeeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Son\",\n    \"lastName\": \"One\",\n    \"position\": \"Son\",\n    \"department\": \"Children\",\n    \"directReports\": [\n        {\n            \"employeeId\": \"{{grandson2id}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Head",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"head1id\");",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"head1id\", jsonData.employeeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Head\",\n    \"lastName\": \"Adult\",\n    \"position\": \"Head of House\",\n    \"department\": \"House\",\n    \"directReports\": [\n        {\n            \"employeeId\": \"{{daughter1id}}\"\n        },\n        {\n            \"employeeId\": \"{{son1id}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Head Reporting Structure",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check the head has the right name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.employee.firstName).to.eql(\"Head\");",
									"    pm.expect(jsonData.employee.lastName).to.eql(\"Adult\");",
									"});",
									"",
									"pm.test(\"Check the head has the right report count\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.numberOfReports).to.eql(5);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/employee/:id/reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								":id",
								"reports"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{head1id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "johnLennonId",
			"value": "16a596ae-edd3-4847-99fe-c4518e82c86f",
			"disabled": true
		},
		{
			"key": "son1id",
			"value": ""
		},
		{
			"key": "grandson1id",
			"value": ""
		},
		{
			"key": "granddaughter1id",
			"value": ""
		},
		{
			"key": "grandson2id",
			"value": ""
		},
		{
			"key": "daughter1id",
			"value": ""
		},
		{
			"key": "head1id",
			"value": ""
		}
	]
}